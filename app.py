import streamlit as st

from src.workflow import app as graph_app
from src.utils.states import GlobalState


st.set_page_config(page_title="SuzyLinguist", page_icon="üó£Ô∏è", layout="centered")

st.title("SuzyLinguist")
st.caption("–ò–ò-–∞–≥–µ–Ω—Ç: –∫–æ–Ω—Å–ø–µ–∫—Ç ‚Ä¢ —Ç–µ—Å—Ç ‚Ä¢ YouTube ‚Ä¢ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏ (–ø–æ –∫–æ–º–∞–Ω–¥–µ 'check')")

if "messages" not in st.session_state:
    st.session_state.messages = []


def render_assistant_output(state: GlobalState):
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
    parts = []
    if state.grammar:
        parts.append(f"–ì—Ä–∞–º–º–∞—Ç–∏–∫–∞:\n{state.grammar}")
    if state.summarize:
        parts.append(f"–ö–æ–Ω—Å–ø–µ–∫—Ç:\n{state.summarize}")
    if state.test:
        parts.append("–¢–µ—Å—Ç (10 –≤–æ–ø—Ä–æ—Å–æ–≤, JSON):\n" + ("```json\n" + str(state.test) + "\n```"))
    if state.youtube:
        yt = "\n".join(state.youtube)
        parts.append(f"YouTube:\n{yt}")
    return "\n\n".join(parts) if parts else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö."


for msg in st.session_state.messages:
    with st.chat_message(msg["role"]):
        st.markdown(msg["content"])


if prompt := st.chat_input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –∏–ª–∏ 'check <—Ç–µ–∫—Å—Ç>' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏"):
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # –ò–Ω—Ñ–µ—Ä–µ–Ω—Å –≥—Ä–∞—Ñ–∞
    state = GlobalState(query=prompt)
    result_state = graph_app.invoke(state)

    assistant_text = render_assistant_output(result_state)
    st.session_state.messages.append({"role": "assistant", "content": assistant_text})
    with st.chat_message("assistant"):
        st.markdown(assistant_text)


